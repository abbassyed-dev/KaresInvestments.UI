{
  "version": 3,
  "sources": ["src/app/login/login.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { catchError, Observable, of, switchMap, throwError } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n    constructor(private http: HttpClient, private cookieService: CookieService) { }\r\n\r\n    login(request: any): Observable<any> {\r\n        return this.http.post<any>(`${environment.apiBaseUrl}/api/auth/login`, {\r\n            email: request.email,\r\n            password: request.password\r\n        });\r\n    }\r\n\r\n    // resetPassword(request: any): Observable<any> {\r\n    //     return this.http.post<any>(`${environment.apiBaseUrl}/api/auth/reset-password`, request);\r\n    // }\r\n    resetPassword(email: string) {\r\n        return this.http.post(`${environment.apiBaseUrl}/api/auth/reset-password`, JSON.stringify(email), {\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n    }\r\n\r\n    refreshToken(): Observable<string> {\r\n        const refreshToken = this.cookieService.get('RefreshToken');\r\n        return this.http.post<{ token: string, refreshToken: string }>(`${environment.apiBaseUrl}/api/auth/refresh-token`, { refreshToken }).pipe(\r\n            switchMap(response => {\r\n                debugger;\r\n                this.cookieService.set('Authorization', response.token);\r\n                return of(response.refreshToken);\r\n            }),\r\n            catchError(error => {\r\n                return throwError(() => error);\r\n            })\r\n        );\r\n    }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;AASM,IAAO,eAAP,MAAO,cAAY;EAErB,YAAoB,MAA0B,eAA4B;AAAtD,SAAA,OAAA;AAA0B,SAAA,gBAAA;EAAgC;EAE9E,MAAM,SAAY;AACd,WAAO,KAAK,KAAK,KAAU,GAAG,YAAY,UAAU,mBAAmB;MACnE,OAAO,QAAQ;MACf,UAAU,QAAQ;KACrB;EACL;;;;EAKA,cAAc,OAAa;AACvB,WAAO,KAAK,KAAK,KAAK,GAAG,YAAY,UAAU,4BAA4B,KAAK,UAAU,KAAK,GAAG;MAC9F,SAAS,EAAE,gBAAgB,mBAAkB;KAChD;EACL;EAEA,eAAY;AACR,UAAM,eAAe,KAAK,cAAc,IAAI,cAAc;AAC1D,WAAO,KAAK,KAAK,KAA8C,GAAG,YAAY,UAAU,2BAA2B,EAAE,aAAY,CAAE,EAAE,KACjI,UAAU,cAAW;AACjB;AACA,WAAK,cAAc,IAAI,iBAAiB,SAAS,KAAK;AACtD,aAAO,GAAG,SAAS,YAAY;IACnC,CAAC,GACD,WAAW,WAAQ;AACf,aAAO,WAAW,MAAM,KAAK;IACjC,CAAC,CAAC;EAEV;;;uBAhCS,eAAY,mBAAA,UAAA,GAAA,mBAAA,aAAA,CAAA;IAAA;EAAA;;4EAAZ,eAAY,SAAZ,cAAY,WAAA,YAFT,OAAM,CAAA;EAAA;;",
  "names": []
}
